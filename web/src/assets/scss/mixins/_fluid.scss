// @mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
//   @each $property in $properties {
//     #{$property}: $min-value;
//   }

//   @media screen and (min-width: $min-vw) {
//     @each $property in $properties {
//       #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
//     }
//   }

//   @media screen and (min-width: $max-vw) {
//     @each $property in $properties {
//       #{$property}: $max-value;
//     }
//   }
// }


@mixin interpolate($properties, $min-value: null, $max-value: null, $min-screen: $layout-breakpoint-xs, $max-screen: $layout-width) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-screen) {
      @each $property in $properties {
        #{$property}: calc-interpolation($max-screen, $max-value, $min-screen, $min-value);
      }
    }

    @media screen and (min-width: $max-screen) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

@mixin fluid-type($min-value: null, $max-value: null, $min-screen: $layout-breakpoint-xs, $max-screen: $layout-width) {
  & {
    font-size: $min-value;

    @media screen and (min-width: $min-screen) {
      font-size: calc-interpolation($max-screen, $max-value, $min-screen, $min-value);
    }

    @media screen and (min-width: $max-screen) {
      font-size: $max-value;
    }
  }
}

@mixin fluid-line-height($min-value: null, $max-value: null, $min-screen: $layout-breakpoint-xs, $max-screen: $layout-width) {
  $a: strip-unit(($max-value - $min-value)) / strip-unit(($max-screen - $min-screen));
  $b: strip-unit($min-value) - $a * strip-unit($min-screen);

  $sign: "+";

  @if ($b < 0) {
    $sign: "-";
    $b: abs($b);
  }

  & {
    line-height: $min-value;

    @media screen and (min-width: $min-screen) {
      $output: calc((#{$a}*100vw) #{$sign} #{$b});
      line-height: $output;
    }

    @media screen and (min-width: $max-screen) {
      line-height: $max-value;
    }
  }
}

// Requires the calc-interpolation function which can also be used independently

@function calc-interpolation($max-screen, $max-value, $min-screen, $min-value) {
  $a: ($max-value - $min-value) / ($max-screen - $min-screen);
  $b: $min-value - $a * $min-screen;

  $sign: "+";

  @if ($b < 0) {
    $sign: "-";
    $b: abs($b);
  }

  @return calc(#{$a*100}vw #{$sign} #{$b});
}
